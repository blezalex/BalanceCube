/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.6-dev */

#ifndef PB_DRV_COMMS_CONFIG_PB_H_INCLUDED
#define PB_DRV_COMMS_CONFIG_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _Config_BalancingConfig { 
    float balance_expo; 
    bool has_max_start_angle;
    int32_t max_start_angle; 
    int32_t shutoff_angle; 
    float output_lpf_rc; 
    int32_t balance_d_param_limiter; 
    float balance_d_param_lpf_rc; 
    uint32_t global_gyro_lpf; 
    bool has_imu_beta;
    float imu_beta; 
    bool has_expo_type;
    int32_t expo_type; 
} Config_BalancingConfig;

typedef struct _Config_Callibration { 
    float x_offset; 
    float y_offset; 
    float z_offset; 
} Config_Callibration;

typedef struct _Config_Misc { 
    bool has_motor1_dir;
    int32_t motor1_dir; 
    bool has_motor2_dir;
    int32_t motor2_dir; 
    bool has_motor3_dir;
    int32_t motor3_dir; 
    bool has_yaw_target;
    float yaw_target; 
    float throttle_rc; 
    float stop_wheel_signal_p; 
} Config_Misc;

typedef struct _Config_PidConfig { 
    float p; 
    float d; 
    float i; 
    float max_i; 
    bool has_i_expo;
    float i_expo; 
} Config_PidConfig;

typedef struct _Config { 
    bool has_callibration;
    Config_Callibration callibration; 
    Config_PidConfig angle_pid; 
    Config_BalancingConfig balance_settings; 
    Config_Misc misc; 
    Config_PidConfig yaw_pid; 
    Config_PidConfig rate_pid; 
} Config;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define Config_init_default                      {false, Config_Callibration_init_default, Config_PidConfig_init_default, Config_BalancingConfig_init_default, Config_Misc_init_default, Config_PidConfig_init_default, Config_PidConfig_init_default}
#define Config_Callibration_init_default         {0.0f, 0.0f, 0.0f}
#define Config_PidConfig_init_default            {0.0f, 0.0f, 0.0f, 0.0f, false, 0.0f}
#define Config_BalancingConfig_init_default      {0.15f, false, 4, 15, 1.0f, 300, 0.15f, 2u, false, 0.02f, false, 0}
#define Config_Misc_init_default                 {false, 1, false, 1, false, 1, false, 0.0f, 0.0001f, 0.0f}
#define Config_init_zero                         {false, Config_Callibration_init_zero, Config_PidConfig_init_zero, Config_BalancingConfig_init_zero, Config_Misc_init_zero, Config_PidConfig_init_zero, Config_PidConfig_init_zero}
#define Config_Callibration_init_zero            {0, 0, 0}
#define Config_PidConfig_init_zero               {0, 0, 0, 0, false, 0}
#define Config_BalancingConfig_init_zero         {0, false, 0, 0, 0, 0, 0, 0, false, 0, false, 0}
#define Config_Misc_init_zero                    {false, 0, false, 0, false, 0, false, 0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define Config_BalancingConfig_balance_expo_tag  1
#define Config_BalancingConfig_max_start_angle_tag 3
#define Config_BalancingConfig_shutoff_angle_tag 5
#define Config_BalancingConfig_output_lpf_rc_tag 7
#define Config_BalancingConfig_balance_d_param_limiter_tag 8
#define Config_BalancingConfig_balance_d_param_lpf_rc_tag 9
#define Config_BalancingConfig_global_gyro_lpf_tag 10
#define Config_BalancingConfig_imu_beta_tag      11
#define Config_BalancingConfig_expo_type_tag     12
#define Config_Callibration_x_offset_tag         4
#define Config_Callibration_y_offset_tag         5
#define Config_Callibration_z_offset_tag         6
#define Config_Misc_motor1_dir_tag               1
#define Config_Misc_motor2_dir_tag               2
#define Config_Misc_motor3_dir_tag               3
#define Config_Misc_yaw_target_tag               4
#define Config_Misc_throttle_rc_tag              6
#define Config_Misc_stop_wheel_signal_p_tag      7
#define Config_PidConfig_p_tag                   1
#define Config_PidConfig_d_tag                   2
#define Config_PidConfig_i_tag                   3
#define Config_PidConfig_max_i_tag               4
#define Config_PidConfig_i_expo_tag              13
#define Config_callibration_tag                  1
#define Config_angle_pid_tag                     2
#define Config_balance_settings_tag              4
#define Config_misc_tag                          5
#define Config_yaw_pid_tag                       8
#define Config_rate_pid_tag                      9

/* Struct field encoding specification for nanopb */
#define Config_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  callibration,      1) \
X(a, STATIC,   REQUIRED, MESSAGE,  angle_pid,         2) \
X(a, STATIC,   REQUIRED, MESSAGE,  balance_settings,   4) \
X(a, STATIC,   REQUIRED, MESSAGE,  misc,              5) \
X(a, STATIC,   REQUIRED, MESSAGE,  yaw_pid,           8) \
X(a, STATIC,   REQUIRED, MESSAGE,  rate_pid,          9)
#define Config_CALLBACK NULL
#define Config_DEFAULT NULL
#define Config_callibration_MSGTYPE Config_Callibration
#define Config_angle_pid_MSGTYPE Config_PidConfig
#define Config_balance_settings_MSGTYPE Config_BalancingConfig
#define Config_misc_MSGTYPE Config_Misc
#define Config_yaw_pid_MSGTYPE Config_PidConfig
#define Config_rate_pid_MSGTYPE Config_PidConfig

#define Config_Callibration_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, FLOAT,    x_offset,          4) \
X(a, STATIC,   REQUIRED, FLOAT,    y_offset,          5) \
X(a, STATIC,   REQUIRED, FLOAT,    z_offset,          6)
#define Config_Callibration_CALLBACK NULL
#define Config_Callibration_DEFAULT (const pb_byte_t*)"\x25\x00\x00\x00\x00\x2d\x00\x00\x00\x00\x35\x00\x00\x00\x00\x00"

#define Config_PidConfig_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, FLOAT,    p,                 1) \
X(a, STATIC,   REQUIRED, FLOAT,    d,                 2) \
X(a, STATIC,   REQUIRED, FLOAT,    i,                 3) \
X(a, STATIC,   REQUIRED, FLOAT,    max_i,             4) \
X(a, STATIC,   OPTIONAL, FLOAT,    i_expo,           13)
#define Config_PidConfig_CALLBACK NULL
#define Config_PidConfig_DEFAULT (const pb_byte_t*)"\x0d\x00\x00\x00\x00\x15\x00\x00\x00\x00\x1d\x00\x00\x00\x00\x25\x00\x00\x00\x00\x6d\x00\x00\x00\x00\x00"

#define Config_BalancingConfig_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, FLOAT,    balance_expo,      1) \
X(a, STATIC,   OPTIONAL, INT32,    max_start_angle,   3) \
X(a, STATIC,   REQUIRED, INT32,    shutoff_angle,     5) \
X(a, STATIC,   REQUIRED, FLOAT,    output_lpf_rc,     7) \
X(a, STATIC,   REQUIRED, INT32,    balance_d_param_limiter,   8) \
X(a, STATIC,   REQUIRED, FLOAT,    balance_d_param_lpf_rc,   9) \
X(a, STATIC,   REQUIRED, UINT32,   global_gyro_lpf,  10) \
X(a, STATIC,   OPTIONAL, FLOAT,    imu_beta,         11) \
X(a, STATIC,   OPTIONAL, INT32,    expo_type,        12)
#define Config_BalancingConfig_CALLBACK NULL
#define Config_BalancingConfig_DEFAULT (const pb_byte_t*)"\x0d\x9a\x99\x19\x3e\x18\x04\x28\x0f\x3d\x00\x00\x80\x3f\x40\xac\x02\x4d\x9a\x99\x19\x3e\x50\x02\x5d\x0a\xd7\xa3\x3c\x60\x00\x00"

#define Config_Misc_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, INT32,    motor1_dir,        1) \
X(a, STATIC,   OPTIONAL, INT32,    motor2_dir,        2) \
X(a, STATIC,   OPTIONAL, INT32,    motor3_dir,        3) \
X(a, STATIC,   OPTIONAL, FLOAT,    yaw_target,        4) \
X(a, STATIC,   REQUIRED, FLOAT,    throttle_rc,       6) \
X(a, STATIC,   REQUIRED, FLOAT,    stop_wheel_signal_p,   7)
#define Config_Misc_CALLBACK NULL
#define Config_Misc_DEFAULT (const pb_byte_t*)"\x08\x01\x10\x01\x18\x01\x25\x00\x00\x00\x00\x35\x17\xb7\xd1\x38\x3d\x00\x00\x00\x00\x00"

extern const pb_msgdesc_t Config_msg;
extern const pb_msgdesc_t Config_Callibration_msg;
extern const pb_msgdesc_t Config_PidConfig_msg;
extern const pb_msgdesc_t Config_BalancingConfig_msg;
extern const pb_msgdesc_t Config_Misc_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define Config_fields &Config_msg
#define Config_Callibration_fields &Config_Callibration_msg
#define Config_PidConfig_fields &Config_PidConfig_msg
#define Config_BalancingConfig_fields &Config_BalancingConfig_msg
#define Config_Misc_fields &Config_Misc_msg

/* Maximum encoded size of messages (where known) */
#define Config_BalancingConfig_size              70
#define Config_Callibration_size                 15
#define Config_Misc_size                         48
#define Config_PidConfig_size                    25
#define Config_size                              220

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
